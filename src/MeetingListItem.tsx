/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import { styled } from '@mui/material/styles';
import { MeetingListItemProps } from './types';
import useMeetingListItem from './useMeetingListItem';
 
const AlertFalseHoverTrueS: any = styled("div", {
    shouldForwardProp: prop => !["data", "props"].includes(prop.toString())
  })(({ theme, data, props }: any) =>({  
  backgroundColor: data.isSelected ? theme.palette["Primary"]["Shades"]["12p"] : props.isHover ? theme.palette["Error"]["Shades"]["12p"] : theme.palette["Primary"]["Contrast"],  
  boxShadow: `inset 0px -1px 0px rgba(172, 172, 172, 1)`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  width: `251px`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `12px`,  
  boxSizing: `border-box`,  
}));
  
const Frame1: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const ImportantAppointment: any = styled("div")(({ theme }: any) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Primary"],  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `14px`,  
  letterSpacing: `0.15000000596046448px`,  
  textDecoration: `none`,  
  lineHeight: `142.99999475479126%`,  
  textTransform: `none`,  
  flexGrow: `1`,  
  margin: `0px`,  
}));
  
const Q930Am945Am: any = styled("div")(({ theme }: any) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Secondary"],  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `16px`,  
  textTransform: `none`,  
  alignSelf: `stretch`,  
  margin: `2px 0px 0px 0px`,  
  cursor: `pointer`,  
}));
 
function MeetingListItem(props: MeetingListItemProps): JSX.Element {
  const {data, fns} = useMeetingListItem();
  return (
    <AlertFalseHoverTrueS data={data} props={props} >
       <Frame1 >
         {data.items && data.items.map((item: any, index: number) => {
           return (
             <ImportantAppointment key={index} >
               {`Important Appointment `}
                 </ImportantAppointment>
           )
         })}
       </Frame1>
       <Q930Am945Am onClick={fns.onClick} >
         {props.prop1}
           </Q930Am945Am>
     </AlertFalseHoverTrueS>
   );
}

export default MeetingListItem;
